///////////////
// Outer box //
.login-form-container {
  background-color: #1A1B25;
  height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

///////////////
// Inner box //
.login-form-box {
  background-color: #0A0B1A;
  border-radius: 15px;
  padding: 26px 32px;
}

//////////////////////
// Component pieces //
//////////////////////

.auth-header {
  text-align: center;
  font-size: 32px;
  font-weight: bold;
  margin-bottom: 24px;
}

.auth-error-container {
  margin: -10px 0px 8px 0px;
}

.auth-error {
  color: #fd51d9;
  font-size: 16px;
  text-align: center;
}

.login-row {
  background-color: #d1d1d1;
  border-radius: 8px;
  padding: 10px 10px;
  margin: 5px;
  display: flex;
}

.login-img {
  height: 35px;
  width: 35px;
  display: inline-block;
  margin: 0;
  padding: 0;
}

.auth-input {
  display: inline-block;
  background-color : #d1d1d1;
  color: #0A0B1A;
  height: 35px;
  margin: 0px;
  padding: 0px 0px 0px 8px;
  font-size: 22px;
}

.auth-submit-container {
  text-align: center;
  margin-bottom: 8px;
  margin-top: 4px;
}

.auth-submit {
  max-width: 400px;
  border-radius: 8px;
  color: #E3F2FC;
  background: #56b2ba;
  font-size: 24px;
  width: 160px;
  height: 55px;
}

.auth-submit:hover {
  background: #6956ec; /* For no gradient support */
  background: -webkit-linear-gradient(bottom, #6956ec , #56b2ba); /* For Safari 5.1 to 6.0 */
  background: -o-linear-gradient(top, #6956ec, #56b2ba); /* For Opera 11.1 to 12.0 */
  background: -moz-linear-gradient(top, #6956ec, #56b2ba); /* For Firefox 3.6 to 15 */
  background: linear-gradient(to top, #6956ec , #56b2ba); /* Standard syntax */
}

.auth-footer-container {
  margin-top: 8px;
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
}

.auth-footer-text {
  margin: 0;
  padding: 0;
  font-size: 18px;
  text-align: center;
  color: #AEB6BF;
}

.auth-footer-link {
  color: #56b2ba;
}

.auth-footer-link:hover {
  color: #0b78e3;
}


// struct CustomColor {
//
//     static let gray = UIColor(red:0.180, green:0.184, blue:0.220, alpha:1.00) // Borders #2E2F38
//
//     static let dark1 = UIColor(red:0.102, green:0.106, blue:0.145, alpha:1.00) // Main Dark #1A1B25
//     static let dark2 = UIColor(red:0.039, green:0.043, blue:0.102, alpha:1.00) // Secondary Dark #0A0B1A
//
//     static let pinkHot = UIColor(red:0.988, green:0.180, blue:0.451, alpha:1.00)
//     static let pinkPale = UIColor(red:0.984, green:0.380, blue:0.863, alpha:1.00)
//     static let pinkRegular = UIColor(red:0.914, green:0.220, blue:0.549, alpha:1.00)
//
//     static let blueLight = UIColor(red:0.392, green:0.729, blue:0.757, alpha:1.00)
//     static let blueDark = UIColor(red:0.106, green:0.522, blue:0.890, alpha:1.00)
//
//     static let yellow = UIColor(red:0.976, green:0.827, blue:0.208, alpha:1.00)
//
//     static let purple1 = UIColor(red:0.592, green:0.361, blue:0.910, alpha:1.00)
//     static let purple2 = UIColor(red:0.455, green:0.408, blue:0.914, alpha:1.00)
//
//     static let green = UIColor(red:0.545, green:0.843, blue:0.216, alpha:1.00)
//
//     static let white = UIColor(red: 0.890, green: 0.949, blue: 0.988, alpha:1.00)
//
//     static let dark3 = UIColor(red: 0.376, green: 0.373, blue: 0.369, alpha: 1.00)
// }
//
// struct HabitColor {
//     static let completed = CustomColor.blueLight
//     static let due = CustomColor.blueDark
//     static let notDue = CustomColor.purple1
//     static let skipped = CustomColor.pinkHot
// }
//
// extension UIColor {
//     var hexString: String {
//         let components = self.cgColor.components
//
//         let red = Float((components?[0])!)
//         let green = Float((components?[1])!)
//         let blue = Float((components?[2])!)
//         return String(format: "#%02lX%02lX%02lX", lroundf(red * 255), lroundf(green * 255), lroundf(blue * 255))
//     }
// }
